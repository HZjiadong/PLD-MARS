@startuml
actor Utilisateur as U
boundary IHM as I
participant System as S
participant Client
participant Personne
participant Contact

autonumber

alt
    U->I: Rechercher un Client par ID
    I-[#red]>S: SM: RechercherClientID (idClient)
    S->Client : SOM getClientParId(idClient)
    Client-[#0000FF]->S: idClient,Client
    S-[#0000FF]->I: idClient,Client
    else
    U->I: Rechercher un Client par Denomination
    I-[#red]>S: SM: RechercherClientDenomination (Denomination)
    S->Client : SOM getClientParDenomination(Denomination)
    Client-[#0000FF]->S: List<idClient,Client>
    S-[#0000FF]->I: List<idClient,Client>
    else
    U->I: Rechercher un Client par Nom Personne
    I-[#red]>S: SM: RechercherClientNomPersonne (Nom)
    S->Personne : SOM getPersonneId(Nom)
    Personne-[#0000FF]->S: idPersonne
    S->Client : SOM getClientParPersonneId(idPersonne)
    Client-[#0000FF]->S: List<idClient,Client>
    S-[#0000FF]->I: List<idClient,Client>
end

U->I: Selection un Client
U->I: Vue 360 d'un Client
I-[#red]>S: SM: VueClient (idClient)
S->Client: SOM getClient(idClient)
Client-[#0000FF]->S: idClient, Client, List<idPersonne>, List<idcompt, compt>,\nList<idSouscription, Souscription>
loop pour chaque idPersonne
    S->Personne: SOM getPersonne(idPersonne)
    Personne-[#0000FF]->S: idPersonne, Personne
end
S->Contact: SOM getContact(idClient)
Contact-[#0000FF]->S: List<idContact, Contact>

S-[#0000FF]->I: idClient,Client,List<idPersonne, Personne>, List<idcompt, compt>,\nList<idSouscription, Souscription>, List<idContact, Contact>
U->I: CU2:Consulter la Liste Personne de Client
U->I: CU3:Consulter la Liste de Contacts
U->I: CU4:Consulter la Liste des Contrats Souscrits
U->I: Consulter la liste des produits

@enduml