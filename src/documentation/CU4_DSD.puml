@startuml
actor Agent
boundary IHM
participant Système
participant Client
participant Contrat
participant Structure
autonumber
Agent -> IHM : Consulter la liste des contrats souscrits
IHM -[#red]> Système : SM 4.1 consulterListeSouscription(idClient)
Système -> Client : SOM getSouscriptions(idClient)
Client -[#0000FF]-> Système : List<idSouscription, Souscription, idContrat>
loop chaque idContrat
    Système -> Contrat : SOM getContratEtDomaine(idContrat)
    Contrat -[#0000FF]-> Système : idContrat, Contrat, idDomaine, Domaine
end
Système --> IHM : List<idSouscription, Souscription, idContrat, Contrat, idDomaine, Domaine>

alt consulter une souscription
    Agent -> IHM : Consulter les infos détaillées d'une souscription
    IHM -[#red]> Système : SM 4.2 consulterDetailSouscription(idSouscription)
    Système -> Client : SOM getListeOption(idSouscription)
    Client -[#0000FF]-> Système : List<idOption>


    loop chaque idOption
        Système -> Contrat : SOM getOption(idOption)
        Contrat -[#0000FF]-> Système :idOption, Option
    end

    Système -> Client : SOM getIdAgent(idSouscription)
    Client -[#0000FF]-> Système : idAgent
    Système -> Structure : SOM getAgent(idAgent)
    Structure -[#0000FF]-> Système : idAgent, Agent

    Système -[#0000FF]-> IHM : idSouscription, List<idOption, Option>, idAgent, Agent

    Agent -> IHM : Consulter les détails d'une option

    alt modifier une souscription
    Agent -> IHM : Passer en modification
    Agent -> IHM : Consulter les détails d'une option
    alt
        Agent -> IHM : Annuler la modification
        IHM -> IHM : revenir en consultation
        else
        Agent -> IHM : Valider la modification
        IHM -[#red]> Système : SM 4.3 validerContratModification(idSouscription, idContrat, Contrat, List<idOption, boolean>, idAgent)

        Système -> Structure : SOM getAgent(idAgent)
        Structure -[#0000FF]-> Système : idAgent, Agent

        Système -> Contrat : SOM updateContrat(idContrat, Contrat, Agent)
        Contrat -[#0000FF]-> Système : CRE

        Système -> Client : SOM updateListeOption(idSouscription, List<idOption, boolean>)
        Client -[#0000FF]-> Système : CRE
        Système -[#0000FF]-> IHM : CRE
        IHM -> IHM : revenir en consultation (SM 4.1)
    end
    else résilier une souscription
    Agent -> IHM : Résilier la souscription
    IHM -[#red]> Système : SM 4.5 resilierSouscription(idSouscription, idAgent)


    Système -> Client : SOM enleverSouscription(idSouscription, idAgent)
    Client -[#0000FF]-> Système : CRE
    Système -[#0000FF]-> IHM : CRE
    IHM -> IHM : revenir en consultation (et update liste de souscription) (SM 4.1)
    end
else créer une nouvelle souscription
    Agent -> IHM : Consulter la liste des contrats fournis par la banque
    IHM -[#red]> Système : SM 4.6 consulterContrats()
    Système -> Contrat : SOM getListeContrat()
    Contrat -[#0000FF]-> Système : List<idContrat, Contrat, List<idDomaine, Domaine>>
    Système -[#0000FF]-> IHM : List<idContrat, Contrat, List<idDomaine, Domaine>>

    Agent -> IHM : Consulter les infos détaillées du contrat
    IHM -[#red]> Système : SM 4.7 consulterDetailContrat(idContrat)
    Système -> Contrat : SOM getContratEtOption(idContrat)
    Contrat -[#0000FF]-> Système : idContrat, Contrat, List<idOption, Option>
    Système -[#0000FF]-> IHM : idContrat, Contrat, List<idOption, Option>

        alt valider la nouvelle souscription
        Agent -> IHM : Créer une nouvelle souscription
        IHM -[#red]> Système : SM 4.8 creerSouscription(idClient, idAgent, idContrat, Souscription, list<idOption, boolean>)
        Système -> Client : SOM ajouterSouscription(idClient, idAgent, idContrat, Souscription, list<idOption, boolean>)
        Client -[#0000FF]-> Système : CRE
        Système -[#0000FF]-> IHM : CRE
        IHM -> IHM : revenir en consultation (et update liste de souscription) (SM 4.1)
        else annuler cette création
        Agent -> IHM : Annuler cette création de souscription
        IHM -> IHM : revenir en consultation (SM 4.1)
        end
end




@enduml